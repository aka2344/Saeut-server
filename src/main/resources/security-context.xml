<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <context:component-scan base-package="saeut.controller" use-default-filters="false" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />

    <!-- index.html과 resources 폴더의 하위 자원들은 사용자 인증/인가 필터를 적용하지 않도록 설정 --> 
    <http pattern="/" security="none"/>
    <http pattern="/index.html" security="none"/>
    <http pattern="/resources/**" security="none"/>

    <!-- 사용자 인증 필터 설정(/api/test 으로 요청에 대한 처리 설정) --> 
    <http pattern="/api/test" auto-config="true" use-expressions="true">
        <csrf disabled="true"/>
        <intercept-url pattern="/**" access="permitAll" />

        <!-- 사용자 로그인 요청을 받으면 뒤의 설정하게 되는 사용자 로그인 필터(loginFilter)를 사용하도록 설정 --> 
        <custom-filter before="BASIC_AUTH_FILTER" ref="authenticationFilter" />
    </http>


    <!-- 서버 암호화 객체 선언 -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!-- 사용자 정보 관리 서비스 객체 선언 --> 
    <beans:bean id="userDetailsService" class="saeut.security.CustomUserDetailService" />


    <!-- 사용자 인가 필터 객체 선언 -->
    <beans:bean id="authenticationFilter" class="saeut.security.JwtRequestFilter" />

    <authentication-manager id="authManager" alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService"/>
    </authentication-manager>

</beans:beans>