<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="saeut.dao.mybatis.mapper.PostMapper">
  <cache />
  
  	<select id="getAllPost" resultType="Post">
	  	select post_id, id, title, post_date, contents, start_date, due_date, status, type
	  	from Post
	  	order by post_date desc
  	</select>
  
   	<select id="getPostByUserId" parameterType="String" resultType="Post">
	  	select post_id, id, title, post_date, contents, start_date, due_date, status, type
	  	from Post
	  	where id=#{id}
	  	order by post_date desc
  	</select>
  	
  	<select id="getPostByType" parameterType="int" resultType="Post">
	  	select id, post_id, id, title, post_date, contents, start_date, due_date, status
	  	from Post
	  	where type=#{type}
	  	order by post_date desc
  	</select>
  	
  	<select id="getPostByTitle" parameterType="String" resultType="Post">
	  	select id, post_id, id, post_date, contents, start_date, due_date, status, type
	  	from Post
	  	where title like CONCAT('%',#{title},'%')
	  	order by post_date desc
  	</select>
  
  	<insert id="insertPost" parameterType="Post">
  	insert into Post(id, title, contents, start_date, due_date, status, type)
  	values(#{id},#{title},#{contents}, #{start_date},#{due_date}, #{status}, #{type})
  	</insert>
  
  	<update id="modPost"  parameterType="Post">
		update Post
		set title=#{title}, contents=#{contents}, start_date=#{start_date}, due_date=#{due_date},
		      status=#{status} , type=#{type}
		where post_id=#{post_id}
 	 </update> 
     
  	<delete id="removePost"  parameterType="int">
	   delete
	   from Post
	   where post_id=#{post_id}
	</delete>
  
  	<select id="isExistPostId" resultType="boolean">
  		select case when (count(post_id) > 0) 
				then true else false end as 'isExistPostId'
		from Post
		where post_id=#{post_id}
  	</select>
 
 </mapper>